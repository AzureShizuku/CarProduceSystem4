<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.car.dao.StockMsgMapper">
  <resultMap id="BaseResultMap" type="com.car.model.StockMsg">
    <id column="id" jdbcType="INTEGER" property="id" />
        <result column="pro_no" property="proNo" jdbcType="VARCHAR" />
  <result column="pro_name" property="proName" jdbcType="VARCHAR" />
  <result column="gg" property="gg" jdbcType="VARCHAR" />
  <result column="dw" property="dw" jdbcType="VARCHAR" />
  <result column="price" property="price" jdbcType="DOUBLE" />
  <result column="num" property="num" jdbcType="INTEGER" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
     id,pro_no,pro_name,gg,dw,price,num
  </sql>
  <select id="selectByExample" parameterType="com.car.model.StockMsgExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stock_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
     <if test="startRow >= 0 and pageRows > 0">
  limit ${startRow},${pageRows}
  </if>

  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
     from stock_msg
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
   delete from stock_msg
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.car.model.StockMsgExample">
    delete from stock_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.car.model.StockMsg">
      <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
  SELECT LAST_INSERT_ID()
</selectKey>

      insert into stock_msg (pro_no,pro_name,gg,dw,price,num)
      values (	#{id,jdbcType=INTEGER},	#{proNo,jdbcType=VARCHAR},	#{proName,jdbcType=VARCHAR},	#{gg,jdbcType=VARCHAR},	#{dw,jdbcType=VARCHAR},	#{price,jdbcType=DOUBLE},	#{num,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.car.model.StockMsg">
   <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
  SELECT LAST_INSERT_ID()
</selectKey>

    insert into stock_msg
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null" >
	  id,
 </if>
<if test="proNo != null" >
	  pro_no,
 </if>
<if test="proName != null" >
	  pro_name,
 </if>
<if test="gg != null" >
	  gg,
 </if>
<if test="dw != null" >
	  dw,
 </if>
<if test="price != null" >
	  price,
 </if>
<if test="num != null" >
	  num
 </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
         <if test="id != null" >
	 #{id,jdbcType=INTEGER},
	 </if>
  <if test="proNo != null" >
	 #{proNo,jdbcType=VARCHAR},
	 </if>
  <if test="proName != null" >
	 #{proName,jdbcType=VARCHAR},
	 </if>
  <if test="gg != null" >
	 #{gg,jdbcType=VARCHAR},
	 </if>
  <if test="dw != null" >
	 #{dw,jdbcType=VARCHAR},
	 </if>
  <if test="price != null" >
	 #{price,jdbcType=DOUBLE},
	 </if>
  <if test="num != null" >
	 #{num,jdbcType=INTEGER},
	 </if>

    </trim>
  </insert>
  <select id="countByExample" parameterType="com.car.model.StockMsgExample" resultType="java.lang.Long">
    select count(*) from stock_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update stock_msg
    <set>
       <if test="record.proNo != null" >
	 pro_no = #{record.proNo,jdbcType=VARCHAR},
</if>
 <if test="record.proName != null" >
	 pro_name = #{record.proName,jdbcType=VARCHAR},
</if>
 <if test="record.gg != null" >
	 gg = #{record.gg,jdbcType=VARCHAR},
</if>
 <if test="record.dw != null" >
	 dw = #{record.dw,jdbcType=VARCHAR},
</if>
 <if test="record.price != null" >
	 price = #{record.price,jdbcType=DOUBLE},
</if>
 <if test="record.num != null" >
	 num = #{record.num,jdbcType=INTEGER}
</if>

    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update stock_msg
    set 
    				pro_no = #{record.proNo,jdbcType=VARCHAR},	pro_name = #{record.proName,jdbcType=VARCHAR},	gg = #{record.gg,jdbcType=VARCHAR},	dw = #{record.dw,jdbcType=VARCHAR},	price = #{record.price,jdbcType=DOUBLE},	num = #{record.num,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.car.model.StockMsg">
    update stock_msg
    <set>
       <if test="proNo != null" >
	 pro_no = #{proNo,jdbcType=VARCHAR},
</if>
 <if test="proName != null" >
	 pro_name = #{proName,jdbcType=VARCHAR},
</if>
 <if test="gg != null" >
	 gg = #{gg,jdbcType=VARCHAR},
</if>
 <if test="dw != null" >
	 dw = #{dw,jdbcType=VARCHAR},
</if>
 <if test="price != null" >
	 price = #{price,jdbcType=DOUBLE},
</if>
 <if test="num != null" >
	 num = #{num,jdbcType=INTEGER}
</if>

    </set>
     where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.car.model.StockMsg">
    update stock_msg
    set 
     			pro_no = #{proNo,jdbcType=VARCHAR},	pro_name = #{proName,jdbcType=VARCHAR},	gg = #{gg,jdbcType=VARCHAR},	dw = #{dw,jdbcType=VARCHAR},	price = #{price,jdbcType=DOUBLE},	num = #{num,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>
